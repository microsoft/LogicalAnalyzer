@using Microsoft.CST.OAT.Utils;
<select class="form-control" id="@id" @bind="SubProperty">
    @for (int i = 0; i < values.Count; i++)
    {
        <option value="@i">@values[i]</option>
    }
</select>
@code {
    [Parameter]
    public object? Object { get; set; }

    [Parameter]
    public string? SubPath { get; set; }

    [Parameter]
    public string id { get; set; } = string.Empty;

    [Parameter]
    public Action? OnChange { get; set; }

    Type? type;

    List<Enum> values = new List<Enum>();

    protected override void OnInitialized()
    {
        type = Helpers.GetValueByPropertyOrFieldName(Object, SubPath)?.GetType();
        foreach(var value in Enum.GetValues(type))
        {
            values.Add((Enum)value);
        }
        base.OnInitialized();
    }

    public int SubProperty
    {
        get
        {
            if (Helpers.GetValueByPropertyOrFieldName(Object, SubPath) is Enum val){
                var idx = values.IndexOf(val);
                return idx >= 0 ? idx : 0;
            }
            return 0;
        }
        set
        {
            Helpers.SetValueByPropertyOrFieldName(Object, SubPath, values[value]);
            if (OnChange != null) {
                OnChange();
            }
        }
    }
}